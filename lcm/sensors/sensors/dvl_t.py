"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct

class dvl_t(object):
    __slots__ = ["utime", "dvl_number", "altitude", "bottom_vel", "bottom_rng", "bt_good_beams", "water_vel", "wt_good_beams", "temp", "sv", "salinity", "depth", "sec_since_midnight"]

    def __init__(self):
        self.utime = 0
        self.dvl_number = 0
        self.altitude = 0.0
        self.bottom_vel = [ 0.0 for dim0 in range(4) ]
        self.bottom_rng = [ 0.0 for dim0 in range(4) ]
        self.bt_good_beams = 0
        self.water_vel = [ 0.0 for dim0 in range(4) ]
        self.wt_good_beams = 0
        self.temp = 0.0
        self.sv = 0.0
        self.salinity = 0.0
        self.depth = 0.0
        self.sec_since_midnight = 0.0

    def encode(self):
        buf = StringIO.StringIO()
        buf.write(dvl_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qhd", self.utime, self.dvl_number, self.altitude))
        buf.write(struct.pack('>4d', *self.bottom_vel[:4]))
        buf.write(struct.pack('>4d', *self.bottom_rng[:4]))
        buf.write(struct.pack(">h", self.bt_good_beams))
        buf.write(struct.pack('>4d', *self.water_vel[:4]))
        buf.write(struct.pack(">hddddd", self.wt_good_beams, self.temp, self.sv, self.salinity, self.depth, self.sec_since_midnight))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != dvl_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return dvl_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = dvl_t()
        self.utime, self.dvl_number, self.altitude = struct.unpack(">qhd", buf.read(18))
        self.bottom_vel = struct.unpack('>4d', buf.read(32))
        self.bottom_rng = struct.unpack('>4d', buf.read(32))
        self.bt_good_beams = struct.unpack(">h", buf.read(2))[0]
        self.water_vel = struct.unpack('>4d', buf.read(32))
        self.wt_good_beams, self.temp, self.sv, self.salinity, self.depth, self.sec_since_midnight = struct.unpack(">hddddd", buf.read(42))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if dvl_t in parents: return 0
        tmphash = (0x29dc894ead5ec48) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if dvl_t._packed_fingerprint is None:
            dvl_t._packed_fingerprint = struct.pack(">Q", dvl_t._get_hash_recursive([]))
        return dvl_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

